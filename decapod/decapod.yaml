heat_template_version: '2017-02-24'
parameters:
  decapod_flavor:
    type: string
    default: m1.medium
  image:
    type: string
    default: ubuntu-16-04-amd64-cloudimg
  availability_zone:
    type: string
    default: mcp-support
  public_net:
    type: string
    default: public
  dns_servers:
    type: comma_delimited_list
    label: dns_servers
    default: 172.18.208.44
  cidr:
    type: string
    default: 192.168.200.0/24
  docker_bridge_ip:
    type: string
    default: 172.19.0.1/24
  decapod_tag:
    type: string
    default: stable-1.1
outputs:
  privtate_key:
    value:
      get_attr: [keypair, private_key]
  decapod_floating_ip:
    value:
      get_attr: [floating_ip, floating_ip_address]
resources:
  decapod:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      availability_zone: { get_param: availability_zone }
      flavor: { get_param: decapod_flavor }
      key_name: {get_resource: keypair}
      name:
        str_replace:
          template: stacknamedecapod
          params:
            stackname: { get_param: 'OS::stack_name' }
      networks:
      - port: { get_resource: deploy_port }
      user_data: {get_resource: cloud_config}
      user_data_format: RAW
  deploy_port:
    properties:
      network: {get_resource: deploy_net}
      security_groups:
      - { get_resource: security_group}
    type: OS::Neutron::Port
  floating_ip:
    properties: {floating_network: { get_param: public_net }}
    type: OS::Neutron::FloatingIP
  floating_ip_asociate:
    properties:
      floatingip_id: {get_resource: floating_ip}
      port_id: { get_resource: deploy_port }
    type: OS::Neutron::FloatingIPAssociation
  security_group_random:
    type: OS::Heat::RandomString
  security_group:
    properties:
      name:
        get_attr: [security_group_random, value]
      rules:
      - {port_range_max: 65535, port_range_min: 0, protocol: tcp, remote_ip_prefix: 0.0.0.0/0}
      - {port_range_max: 65535, port_range_min: 0, protocol: udp, remote_ip_prefix: 0.0.0.0/0}
      - {protocol: icmp, remote_ip_prefix: 0.0.0.0/0}
    type: OS::Neutron::SecurityGroup
  cloud_config:
    properties:
      cloud_config:
        disable_root: 0
        package_upgrade: true
        runcmd:
        - str_replace:
            params:
              wc_notify: { get_attr: ['wait_handle', 'curl_cli'] }
              docker_bridge_ip: { get_param: docker_bridge_ip }
              decapod_tag:  { get_param: decapod_tag }
            template: |
              apt install -y nodejs nodejs-legacy npm
              pip install 'setuptools>=26' 
              apt-get install -y python docker docker.io
              python -c 'import json; obj={}; obj["bip"]="docker_bridge_ip"; print(json.dumps(obj))' > /etc/docker/daemon.json
              systemctl restart docker
              git clone --recurse-submodules https://github.com/Mirantis/ceph-lcm.git decapod
              ( cd decapod ; git checkout decapod_tag && git submodule update --init --recursive )
              docker pull docker-prod-local.artifactory.mirantis.com/mirantis/ceph/decapod/admin
              docker pull docker-prod-local.artifactory.mirantis.com/mirantis/ceph/decapod/db-data
              docker pull docker-prod-local.artifactory.mirantis.com/mirantis/ceph/decapod/db
              docker pull docker-prod-local.artifactory.mirantis.com/mirantis/ceph/decapod/frontend
              docker pull docker-prod-local.artifactory.mirantis.com/mirantis/ceph/decapod/controller
              docker pull docker-prod-local.artifactory.mirantis.com/mirantis/ceph/decapod/api
              docker tag docker-prod-local.artifactory.mirantis.com/mirantis/ceph/decapod/admin decapod/admin
              docker tag docker-prod-local.artifactory.mirantis.com/mirantis/ceph/decapod/db-data decapod/db-data
              docker tag docker-prod-local.artifactory.mirantis.com/mirantis/ceph/decapod/db decapod/db
              docker tag docker-prod-local.artifactory.mirantis.com/mirantis/ceph/decapod/frontend decapod/frontend
              docker tag docker-prod-local.artifactory.mirantis.com/mirantis/ceph/decapod/controller decapod/controlller
              docker tag docker-prod-local.artifactory.mirantis.com/mirantis/ceph/decapod/api decapod/api 
              wc_notify --data-binary '{"status": "SUCCESS"}'
        write_files:
        - path: /root/.ssh/id_rsa
          permissions: 0600
          content:  { get_attr: [keypair, private_key ]}
        - path: /root/.ssh/authorized_keys
          permissions: 0600
          content:  { get_attr: [keypair, public_key ]}
    type: OS::Heat::CloudConfig
  wait_condition:
    type: OS::Heat::WaitCondition
    properties:
      handle: {get_resource: wait_handle}
      timeout: 1200
  wait_handle:
    type: OS::Heat::WaitConditionHandle
  deploy_net:
    properties: {name: deploy_net}
    type: OS::Neutron::Net
  deploy_subnet:
    properties:
      cidr: { get_param: cidr }
      network: {get_resource: deploy_net}
      dns_nameservers:
        repeat:
          for_each:
            dns_server: { get_param: dns_servers }
          template:
            dns_server
    type: OS::Neutron::Subnet
  ext_router:
    properties:
      external_gateway_info: {network: { get_param: public_net }}
    type: OS::Neutron::Router
  ext_router_assignment:
    properties:
      router: {get_resource: ext_router}
      subnet: {get_resource: deploy_subnet}
    type: OS::Neutron::RouterInterface
  keyname_random: {type: 'OS::Heat::RandomString'}
  keypair:
    properties:
      name:
        get_attr: [keyname_random, value]
      save_private_key: true
    type: OS::Nova::KeyPair
